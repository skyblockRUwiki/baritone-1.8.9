

group 'baritone'
version '1.0.0'

buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "SpongePowered"
            url = "https://repo.spongepowered.org/repository/maven-public/"
        }
        jcenter()
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}


import baritone.gradle.task.CreateDistTask
import baritone.gradle.task.ProguardTask

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = "UTF-8"
}

sourceSets {
    launch {
        compileClasspath += main.compileClasspath + main.runtimeClasspath + main.output
    }

    schematica_api {
        compileClasspath += main.compileClasspath
    }

    main {
        compileClasspath += schematica_api.output
    }
}

minecraft {
    version = '1.8.9'
    mappings = 'stable_22'
    tweakClass = 'baritone.launch.BaritoneTweaker'
    runDir = 'run'

    makeObfSourceJar = true
}

repositories {
    mavenCentral()

    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }

    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
}

dependencies {
    compile('it.unimi.dsi:fastutil:8.2.1')
    compileOnly("com.google.code.findbugs:jsr305:3.0.1")
    runtime launchCompile('com.github.ImpactDevelopment:SimpleTweaker:1.2')
    runtime launchCompile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.launch, 'mixins.baritone.refmap.json'
}

jar {
    from sourceSets.launch.output, sourceSets.api.output

    if (!getProject().hasProperty("baritone.forge_build")) {
        exclude "**/BaritoneForgeModXD.class"
        exclude "**/mods.toml"
    }

    manifest {
        attributes(
                'MixinConfigs': 'mixins.baritone.json',

                'Implementation-Title': 'Baritone',
                'Implementation-Version': version
        )
    }
}

task proguard(type: ProguardTask) {
    url 'https://downloads.sourceforge.net/project/proguard/proguard/6.0/proguard6.0.3.zip'
    extract 'proguard6.0.3/lib/proguard.jar'
}

task createDist(type: CreateDistTask, dependsOn: proguard)

build.finalizedBy(createDist)

install {
    def jarApiName = String.format("%s-api-%s", rootProject.name, version.toString())
    def jarApiForgeName = String.format("%s-api-forge-%s", rootProject.name, version.toString())
    def jarSAName = String.format("%s-standalone-%s", rootProject.name, version.toString())
    def jarSAForgeName = String.format("%s-standalone-forge-%s", rootProject.name, version.toString())

    artifacts {
        archives file("$buildDir/libs/"+jarApiName+".jar")
        archives file("$buildDir/libs/"+jarApiForgeName+".jar")
        archives file("$buildDir/libs/"+jarSAName+".jar")
        archives file("$buildDir/libs/"+jarSAForgeName+".jar")
    }
    repositories.mavenInstaller {
        addFilter('api') { artifact, file -> artifact.name == "baritone-api" }
        addFilter('api-forge') { artifact, file -> artifact.name == "baritone-api-forge" }
        addFilter('standalone') { artifact, file -> artifact.name == "baritone-standalone" }
        addFilter('standalone-forge') { artifact, file -> artifact.name == "baritone-standalone-forge" }
    }
}

install.dependsOn(build)